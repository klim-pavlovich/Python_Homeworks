# Задача 16: Требуется вычислить, сколько раз встречается некоторое
# число X в массиве A[1..N]. Пользователь в первой строке вводит
# натуральное число N – количество элементов в массиве. В последующих
# строках записаны N целых чисел Ai
# . Последняя строка содержит число X
# 5
# 1 2 3 4 5
# 3
# -> 1

# sizeOfArray = int(input('Введите длину масссива: '))

# lst = [(i+1) for i in range (sizeOfArray)]
# print(lst)

# number = int(input('Введите искомое число: '))
# count = 0

# for i in lst:
#     if lst[i-1] == number:
#         count+=1
        
# print(count)

# Задача 18: Требуется найти в массиве A[1..N] самый близкий по
# величине элемент к заданному числу X. Пользователь в первой строке
# вводит натуральное число N – количество элементов в массиве. В
# последующих строках записаны N целых чисел Ai
# . Последняя строка
# содержит число X
# 5
# 1 2 3 4 5
# 6
# -> 5

# sizeOfArray = int(input('Введите длину масссива: '))

# lst = [(i+1) for i in range (sizeOfArray)]
# print(lst)

# number = int(input('Введите положительное число: '))

# for i in lst:
#     if number == lst[i-1]:
#         print(number)
    
# if number > lst[-1]:
#     print(lst[i-1])

# Задача HARD необязательная
# Имеется список чисел. 
# Создайте список, в который попадают числа, описывающие
# максимальную возрастающую последовательность. Порядок элементов менять нельзя.
# Одно число - это не последовательность.

# Пример:

# [1, 5, 2, 3, 4, 6, 1, 7] => [1, 7]

# [1, 5, 2, 3, 4, 1, 7, 8 , 15 , 1 ] => [1, 5]

# [1, 5, 3, 4, 1, 7, 8 , 15 , 1 ] => [3, 5]

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.
# А русские буквы оцениваются так:
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.

slovEng ={1:'AEIOULNSTR', 2:'DG', 3:'BCMP', 4:'FHVWY', 5:'K', 8:'JZ', 10:'QZ'}
slovRus = {1:'АВЕИНОРСТ', 2:'ДКЛМПУ', 3:'БГЁЬЯ', 4:'ЙЫ', 5:'ЖЗХЦЧ', 8:'ШЭЮ', 10:'ФЩЪ'}

number = int(input('Введите 1, если слово будет на английском, или 0, если на русском: '))

wordFromUser = input('Введите слово: ').upper()

if number == 1:
    print('Вы получаете', sum([k for i in wordFromUser for k,v in slovEng.items() if i in v]), 'очков')

elif number == 0:
    print('Вы получаете', sum([k for i in wordFromUser for k,v in slovRus.items() if i in v]), 'очков')
else:
    print('Вы использовали как русскую, так и английскую расскладку, а это запрещено!')

# НЕ ДОРЕШАЛ 

# from random import randint

# number = int(input('Введите размер списка: '))
# lst = [randint(1,10) for i in range(number)]
# print(lst)

# # ищем минимальное число

# min = lst[0]

# for i in range (lst[1],len(lst)):
#     if (lst[i] < min):
#         min = lst[i]
        
# print(min)

# count = 0


# # считаем длину максимального диапазона

# for i in range (lst[0],len(lst)):
#     if (lst[i] + 1 == min):
#         count +=1
#         min = lst[i]


# print(count)
    


